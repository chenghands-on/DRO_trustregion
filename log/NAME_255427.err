/nfsshare/home/xiechenghan/anaconda3/envs/rlxch/lib/python3.8/site-packages/torchvision/io/image.py:13: UserWarning: Failed to load image Python extension: libtorch_cuda_cu.so: cannot open shared object file: No such file or directory
  warn(f"Failed to load image Python extension: {e}")
/nfsshare/home/xiechenghan/anaconda3/envs/rlxch/lib/python3.8/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/nfsshare/home/xiechenghan/anaconda3/envs/rlxch/lib/python3.8/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.
  warnings.warn(msg)
/nfsshare/home/xiechenghan/DRO_trustregion/utils.py:69: UserWarning: Using a target size (torch.Size([32])) that is different to the input size (torch.Size([32, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  inner_loss = F.mse_loss(predict,label)/len(label)
/nfsshare/home/xiechenghan/DRO_trustregion/utils.py:72: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  loss=torch.tensor(lbda)*(-1+1/4*torch.pow((inner_loss-torch.tensor(eta))/torch.tensor(lbda)+2,2))+torch.tensor(eta)
/nfsshare/home/xiechenghan/DRO_trustregion/utils.py:69: UserWarning: Using a target size (torch.Size([11])) that is different to the input size (torch.Size([11, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  inner_loss = F.mse_loss(predict,label)/len(label)
